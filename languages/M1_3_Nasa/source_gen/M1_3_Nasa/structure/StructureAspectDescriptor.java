package M1_3_Nasa.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCapability = createDescriptorForCapability();
  /*package*/ final ConceptDescriptor myConceptCapabilityCurrent = createDescriptorForCapabilityCurrent();
  /*package*/ final ConceptDescriptor myConceptCapabilityCurrentParameter = createDescriptorForCapabilityCurrentParameter();
  /*package*/ final ConceptDescriptor myConceptCapabilityTarget = createDescriptorForCapabilityTarget();
  /*package*/ final ConceptDescriptor myConceptCapabilityTargetParameter = createDescriptorForCapabilityTargetParameter();
  /*package*/ final ConceptDescriptor myConceptClassifierEditor = createDescriptorForClassifierEditor();
  /*package*/ final ConceptDescriptor myConceptEnables = createDescriptorForEnables();
  /*package*/ final ConceptDescriptor myConceptEnhances = createDescriptorForEnhances();
  /*package*/ final ConceptDescriptor myConceptLaunch = createDescriptorForLaunch();
  /*package*/ final ConceptDescriptor myConceptMission = createDescriptorForMission();
  /*package*/ final ConceptDescriptor myConceptNeed = createDescriptorForNeed();
  /*package*/ final ConceptDescriptor myConceptRequires = createDescriptorForRequires();
  /*package*/ final ConceptDescriptor myConceptRoadmapEditor = createDescriptorForRoadmapEditor();
  /*package*/ final ConceptDescriptor myConceptTechnology1 = createDescriptorForTechnology1();
  /*package*/ final ConceptDescriptor myConceptTechnologyArea = createDescriptorForTechnologyArea();
  /*package*/ final ConceptDescriptor myConceptTechnologyClass = createDescriptorForTechnologyClass();
  /*package*/ final ConceptDescriptor myConceptTechnologyCurrent = createDescriptorForTechnologyCurrent();
  /*package*/ final ConceptDescriptor myConceptTechnologyCurrentParameter = createDescriptorForTechnologyCurrentParameter();
  /*package*/ final ConceptDescriptor myConceptTechnologyEditor = createDescriptorForTechnologyEditor();
  /*package*/ final ConceptDescriptor myConceptTechnologyFamily = createDescriptorForTechnologyFamily();
  /*package*/ final ConceptDescriptor myConceptTechnologyTarget = createDescriptorForTechnologyTarget();
  /*package*/ final ConceptDescriptor myConceptTechnologyTargetParameter = createDescriptorForTechnologyTargetParameter();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, "M2_AbstractLanguage");
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCapability, myConceptCapabilityCurrent, myConceptCapabilityCurrentParameter, myConceptCapabilityTarget, myConceptCapabilityTargetParameter, myConceptClassifierEditor, myConceptEnables, myConceptEnhances, myConceptLaunch, myConceptMission, myConceptNeed, myConceptRequires, myConceptRoadmapEditor, myConceptTechnology1, myConceptTechnologyArea, myConceptTechnologyClass, myConceptTechnologyCurrent, myConceptTechnologyCurrentParameter, myConceptTechnologyEditor, myConceptTechnologyFamily, myConceptTechnologyTarget, myConceptTechnologyTargetParameter);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Capability:
        return myConceptCapability;
      case LanguageConceptSwitch.CapabilityCurrent:
        return myConceptCapabilityCurrent;
      case LanguageConceptSwitch.CapabilityCurrentParameter:
        return myConceptCapabilityCurrentParameter;
      case LanguageConceptSwitch.CapabilityTarget:
        return myConceptCapabilityTarget;
      case LanguageConceptSwitch.CapabilityTargetParameter:
        return myConceptCapabilityTargetParameter;
      case LanguageConceptSwitch.ClassifierEditor:
        return myConceptClassifierEditor;
      case LanguageConceptSwitch.Enables:
        return myConceptEnables;
      case LanguageConceptSwitch.Enhances:
        return myConceptEnhances;
      case LanguageConceptSwitch.Launch:
        return myConceptLaunch;
      case LanguageConceptSwitch.Mission:
        return myConceptMission;
      case LanguageConceptSwitch.Need:
        return myConceptNeed;
      case LanguageConceptSwitch.Requires:
        return myConceptRequires;
      case LanguageConceptSwitch.RoadmapEditor:
        return myConceptRoadmapEditor;
      case LanguageConceptSwitch.Technology1:
        return myConceptTechnology1;
      case LanguageConceptSwitch.TechnologyArea:
        return myConceptTechnologyArea;
      case LanguageConceptSwitch.TechnologyClass:
        return myConceptTechnologyClass;
      case LanguageConceptSwitch.TechnologyCurrent:
        return myConceptTechnologyCurrent;
      case LanguageConceptSwitch.TechnologyCurrentParameter:
        return myConceptTechnologyCurrentParameter;
      case LanguageConceptSwitch.TechnologyEditor:
        return myConceptTechnologyEditor;
      case LanguageConceptSwitch.TechnologyFamily:
        return myConceptTechnologyFamily;
      case LanguageConceptSwitch.TechnologyTarget:
        return myConceptTechnologyTarget;
      case LanguageConceptSwitch.TechnologyTargetParameter:
        return myConceptTechnologyTargetParameter;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCapability() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "Capability", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e5e035L);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.ElementClass", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd376c8ceL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991215370293");
    b.version(2);
    b.property("description", 0x4742492ef6e75364L).type(PrimitiveTypeId.STRING).origin("5134746991215465316").done();
    b.alias("Capability");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityCurrent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "CapabilityCurrent", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef71fdcc6L);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.Element", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd39fdab8L);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991219170502");
    b.version(2);
    b.property("description", 0x4742492ef71fdd86L).type(PrimitiveTypeId.STRING).origin("5134746991219170694").done();
    b.alias("Capability State-of-the-art:");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityCurrentParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "CapabilityCurrentParameter", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x12786cdabf374400L);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.AttributeValue", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd378a96fL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991217375083");
    b.version(2);
    b.alias("Capability Current Parameter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityTarget() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "CapabilityTarget", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e7535cL);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.Element", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd39fdab8L);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991215465308");
    b.version(2);
    b.property("description", 0x4742492ef71fdd8aL).type(PrimitiveTypeId.STRING).origin("5134746991219170698").done();
    b.alias("Capability Performance Goal:");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCapabilityTargetParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "CapabilityTargetParameter", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef71a76eeL);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.AttributeValue", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd378a96fL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991218816750");
    b.version(2);
    b.alias("Parameter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassifierEditor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "ClassifierEditor", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x12ac175056f7b16L);
    b.class_(false, false, true);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/84092251406301974");
    b.version(2);
    b.aggregate("areas", 0x12ac175056f7b17L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x12ac175056f7ad3L).optional(true).ordered(true).multiple(true).origin("84092251406301975").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnables() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "Enables", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef732456cL);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.Link", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd376c8cfL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991220376940");
    b.version(2);
    b.alias("enables");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnhances() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "Enhances", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x5ff61aa79018eff1L);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.Link", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd376c8cfL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/6914743584853389297");
    b.version(2);
    b.alias("enhances");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLaunch() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "Launch", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e5e033L);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.Element", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd39fdab8L);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991215370291");
    b.version(2);
    b.alias("Launch");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMission() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "Mission", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e31487L);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.ElementClass", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd376c8ceL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991215187079");
    b.version(2);
    b.alias("Mission");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNeed() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "Need", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e5e032L);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.Element", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd39fdab8L);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991215370290");
    b.version(2);
    b.alias("Need");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRequires() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "Requires", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef732456dL);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.Link", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd376c8cfL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991220376941");
    b.version(2);
    b.alias("requires");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoadmapEditor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "RoadmapEditor", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef7365863L);
    b.class_(false, false, true);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991220643939");
    b.version(2);
    b.aggregate("mission", 0x4742492ef7365866L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e31487L).optional(true).ordered(true).multiple(true).origin("5134746991220643942").done();
    b.aggregate("launchDate", 0x5ff61aa790089f22L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e5e033L).optional(true).ordered(true).multiple(true).origin("6914743584852320034").done();
    b.aggregate("need", 0x4742492ef739f119L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e5e032L).optional(true).ordered(true).multiple(true).origin("5134746991220879641").done();
    b.aggregate("requires", 0x4742492ef7365868L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef732456dL).optional(true).ordered(true).multiple(true).origin("5134746991220643944").done();
    b.aggregate("enables", 0x4742492ef739f125L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef732456cL).optional(true).ordered(true).multiple(true).origin("5134746991220879653").done();
    b.aggregate("enhances", 0x5ff61aa79018eff2L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x5ff61aa79018eff1L).optional(true).ordered(true).multiple(true).origin("6914743584853389298").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTechnology1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "Technology1", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x12ac175056f7c29L);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.ElementClass", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd376c8ceL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/84092251406302249");
    b.version(2);
    b.property("description", 0x4742492ef6e7487aL).type(PrimitiveTypeId.STRING).origin("84092251406302250").done();
    b.property("challenge", 0x4742492ef6e7487dL).type(PrimitiveTypeId.STRING).origin("84092251406302251").done();
    b.property("dependency", 0x4742492ef727d7b7L).type(PrimitiveTypeId.BOOLEAN).origin("84092251406302252").done();
    b.property("classifier", 0x12ac175056faf44L).type(PrimitiveTypeId.STRING).origin("84092251406315332").done();
    b.associate("class_ref", 0x12ac1750574e3a5L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e5e034L).optional(false).origin("84092251406656421").done();
    b.alias("Technology");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTechnologyArea() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "TechnologyArea", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x12ac175056f7ad3L);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.ElementClass", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd376c8ceL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/84092251406301907");
    b.version(2);
    b.property("classifier", 0x12ac175056f7b45L).type(PrimitiveTypeId.STRING).origin("84092251406302021").done();
    b.alias("Technology Area");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTechnologyClass() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "TechnologyClass", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e5e034L);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.ElementClass", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd376c8ceL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991215370292");
    b.version(2);
    b.property("classifier", 0x12ac175056faf49L).type(PrimitiveTypeId.STRING).origin("84092251406315337").done();
    b.alias("Technology Class");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTechnologyCurrent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "TechnologyCurrent", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6f49df9L);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.Element", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd39fdab8L);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991216336377");
    b.version(2);
    b.property("trl", 0x4742492ef6f49dfaL).type(PrimitiveTypeId.INTEGER).origin("5134746991216336378").done();
    b.property("description", 0x5ff61aa790218ce5L).type(PrimitiveTypeId.STRING).origin("6914743584853953765").done();
    b.alias("Technology State-of-the-art");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTechnologyCurrentParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "TechnologyCurrentParameter", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef71a76edL);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.AttributeValue", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd378a96fL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991218816749");
    b.version(2);
    b.alias("Technology Parameter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTechnologyEditor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "TechnologyEditor", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6ede25dL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991215895133");
    b.version(2);
    b.aggregate("technology", 0x4742492ef6ef05c6L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x12ac175056f7c29L).optional(false).ordered(true).multiple(false).origin("5134746991215969734").done();
    b.aggregate("technologyCurrent", 0x4742492ef6f4e5d3L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6f49df9L).optional(true).ordered(true).multiple(false).origin("5134746991216354771").done();
    b.aggregate("technologyCurrentParameters", 0x4742492ef6fbb301L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef71a76edL).optional(true).ordered(true).multiple(true).origin("5134746991216800513").done();
    b.aggregate("technologyTarget", 0x4742492ef6ef05ccL).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e7488bL).optional(true).ordered(true).multiple(false).origin("5134746991215969740").done();
    b.aggregate("technologyTargetParameters", 0x4742492ef7183061L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef704776bL).optional(true).ordered(true).multiple(true).origin("5134746991218667617").done();
    b.aggregate("capability", 0x4742492ef7200907L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e5e035L).optional(false).ordered(true).multiple(false).origin("5134746991219181831").done();
    b.aggregate("capabilityCurrent", 0x4742492ef6ef05cfL).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef71fdcc6L).optional(true).ordered(true).multiple(false).origin("5134746991215969743").done();
    b.aggregate("capabilityCurrentParameters", 0x4742492ef7183069L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x12786cdabf374400L).optional(true).ordered(true).multiple(true).origin("5134746991218667625").done();
    b.aggregate("capabilityTarget", 0x4742492ef6ef05d3L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e7535cL).optional(true).ordered(true).multiple(false).origin("5134746991215969747").done();
    b.aggregate("capabilityTargetParameters", 0x4742492ef7183072L).target(0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef71a76eeL).optional(true).ordered(true).multiple(true).origin("5134746991218667634").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTechnologyFamily() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "TechnologyFamily", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x12ac175056f7ad5L);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.ElementClass", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd376c8ceL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/84092251406301909");
    b.version(2);
    b.property("classifier", 0x12ac175056f7b49L).type(PrimitiveTypeId.STRING).origin("84092251406302025").done();
    b.alias("Technology Family");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTechnologyTarget() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "TechnologyTarget", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef6e7488bL);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.Element", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd39fdab8L);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991215462539");
    b.version(2);
    b.property("trl", 0x4742492ef6e9427dL).type(PrimitiveTypeId.INTEGER).origin("5134746991215592061").done();
    b.property("description", 0x5ff61aa790218ce8L).type(PrimitiveTypeId.STRING).origin("6914743584853953768").done();
    b.alias("Technology Performance Goal");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTechnologyTargetParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("M1_3_Nasa", "TechnologyTargetParameter", 0x5af350f1d17747fcL, 0x845f9e68de691f89L, 0x4742492ef704776bL);
    b.class_(false, false, false);
    b.super_("M2_AbstractLanguage.structure.AttributeValue", 0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd378a96fL);
    b.origin("r:2f1a2dd3-86fd-49e8-a7d7-e46d28e76c47(M1_3_Nasa.structure)/5134746991218816751");
    b.version(2);
    b.alias("Technology Parameter");
    return b.create();
  }
}
