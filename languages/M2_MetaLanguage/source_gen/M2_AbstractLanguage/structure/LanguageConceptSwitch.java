package M2_AbstractLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Attribute = 0;
  public static final int AttributeFunction = 1;
  public static final int AttributeValue = 2;
  public static final int Dimensions = 3;
  public static final int Element = 4;
  public static final int ElementClass = 5;
  public static final int ElementModel = 6;
  public static final int Epoch = 7;
  public static final int Function = 8;
  public static final int Graph = 9;
  public static final int Level = 10;
  public static final int Link = 11;
  public static final int ModelConfiguration = 12;
  public static final int ModelFunction = 13;
  public static final int Roadmap = 14;
  public static final int Scenario = 15;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x4b68402a1c7b472dL, 0x8c517b3c81719d43L);
    builder.put(0x7157f84cd376c8d0L, Attribute);
    builder.put(0x5fd117c68b9e1eaeL, AttributeFunction);
    builder.put(0x7157f84cd378a96fL, AttributeValue);
    builder.put(0x7157f84cd378a935L, Dimensions);
    builder.put(0x7157f84cd39fdab8L, Element);
    builder.put(0x7157f84cd376c8ceL, ElementClass);
    builder.put(0x7157f84cd3adb99fL, ElementModel);
    builder.put(0x7157f84cd378a93dL, Epoch);
    builder.put(0x5fd117c68b979593L, Function);
    builder.put(0x6af2d35c6caae44dL, Graph);
    builder.put(0x7157f84cd378a93bL, Level);
    builder.put(0x7157f84cd376c8cfL, Link);
    builder.put(0x7157f84cd3adb99cL, ModelConfiguration);
    builder.put(0x5fd117c68b9e1eb4L, ModelFunction);
    builder.put(0x5ff61aa7902e7f03L, Roadmap);
    builder.put(0x7157f84cd378a93cL, Scenario);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
