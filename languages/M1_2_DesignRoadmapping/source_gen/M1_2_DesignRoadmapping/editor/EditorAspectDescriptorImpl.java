package M1_2_DesignRoadmapping.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new AudFeedback_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new CoreExperience_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new ElementList_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Evolve_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new FormFactor_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new KeyFeature_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Microcontroller_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new Outcome_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new Power_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new PrimaryUserNeed_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new Requires_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new Satisfies_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new ScreenInterface_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x4742492ef6d05c17L), MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x4742492ef6d0566aL), MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x4742492ef6d05c97L), MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x7157f84cd3a18171L), MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x4742492ef6d05c51L), MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x4742492ef6d0568bL), MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x4742492ef6d05692L), MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x4742492ef6d0566fL), MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x4742492ef6d05c4eL), MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x4742492ef6d0566dL), MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x4742492ef6df268cL), MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x4742492ef6dc6ff1L), MetaIdFactory.conceptId(0xa3ca47195a3a4b22L, 0x9db2d6b600fc0223L, 0x4742492ef6d05695L)).seal();
}
