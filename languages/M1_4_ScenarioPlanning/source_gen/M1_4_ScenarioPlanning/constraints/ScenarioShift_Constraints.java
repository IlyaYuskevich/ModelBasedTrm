package M1_4_ScenarioPlanning.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import jetbrains.mps.scope.ListScope;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.Objects;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.HashMap;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class ScenarioShift_Constraints extends BaseConstraintsDescriptor {
  public ScenarioShift_Constraints() {
    super(CONCEPTS.ScenarioShift$Bg);
  }

  @Override
  protected Map<SReferenceLink, ReferenceConstraintsDescriptor> getSpecifiedReferences() {
    BaseReferenceConstraintsDescriptor d0 = new BaseReferenceConstraintsDescriptor(LINKS.target$ehr1, this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return breakingNode_h2ra4k_a0a0a0a0a1a0a0a0c;
          }
          @Override
          public Scope createScope(final ReferenceConstraintsContext _context) {
            return ListScope.forNamedElements(ListSequence.fromList(SModelOperations.nodes(SNodeOperations.getModel(_context.getReferenceNode()), null)).where(new IWhereFilter<SNode>() {
              public boolean accept(SNode it) {
                return Objects.equals(SNodeOperations.getConcept(it), SNodeOperations.getConcept(SLinkOperations.getTarget(_context.getReferenceNode(), LINKS.source$eaQ_)));
              }
            }).where(new IWhereFilter<SNode>() {
              public boolean accept(SNode it) {
                return !(Objects.equals(SLinkOperations.getTarget(SNodeOperations.as(it, CONCEPTS.Element$LJ), LINKS.scenario$rcFc), SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getReferenceNode(), LINKS.source$eaQ_), LINKS.scenario$rcFc)));
              }
            }).where(new IWhereFilter<SNode>() {
              public boolean accept(SNode it) {
                return SPropertyOperations.getString(SLinkOperations.getTarget(SNodeOperations.as(it, CONCEPTS.Element$LJ), LINKS.startDate$oGrx), PROPS.date$N6Cq).compareTo(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getReferenceNode(), LINKS.source$eaQ_), LINKS.endDate$PWfp), PROPS.date$N6Cq)) >= 0;
              }
            }));
          }
        };
      }
    };
    Map<SReferenceLink, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLink, ReferenceConstraintsDescriptor>();
    references.put(d0.getReference(), d0);
    return references;
  }
  private static final SNodePointer breakingNode_h2ra4k_a0a0a0a0a1a0a0a0c = new SNodePointer("r:17add434-08b0-4034-b1fd-4f855b3b8b70(M1_4_ScenarioPlanning.constraints)", "6904325845244771250");

  private static final class CONCEPTS {
    /*package*/ static final SConcept ScenarioShift$Bg = MetaAdapterFactory.getConcept(0xaee53256d5314aefL, 0xa69aa7f9142b644dL, 0x5ff61aa790335ca4L, "M1_4_ScenarioPlanning.structure.ScenarioShift");
    /*package*/ static final SConcept Element$LJ = MetaAdapterFactory.getConcept(0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd39fdab8L, "M2_AbstractLanguage.structure.Element");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink target$ehr1 = MetaAdapterFactory.getReferenceLink(0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd376c8cfL, 0x7157f84cd376fa9aL, "target");
    /*package*/ static final SReferenceLink source$eaQ_ = MetaAdapterFactory.getReferenceLink(0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd376c8cfL, 0x7157f84cd376fa93L, "source");
    /*package*/ static final SReferenceLink scenario$rcFc = MetaAdapterFactory.getReferenceLink(0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd39fdab8L, 0x6dcfdc8822f7ce5L, "scenario");
    /*package*/ static final SReferenceLink startDate$oGrx = MetaAdapterFactory.getReferenceLink(0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd39fdab8L, 0x6dcfdc8822f7cdaL, "startDate");
    /*package*/ static final SReferenceLink endDate$PWfp = MetaAdapterFactory.getReferenceLink(0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd39fdab8L, 0x12ac175054aea28L, "endDate");
  }

  private static final class PROPS {
    /*package*/ static final SProperty date$N6Cq = MetaAdapterFactory.getProperty(0x4b68402a1c7b472dL, 0x8c517b3c81719d43L, 0x7157f84cd378a93dL, 0x7157f84cd378a96bL, "date");
  }
}
